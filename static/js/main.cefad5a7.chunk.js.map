{"version":3,"sources":["App5.js","App1.js","App2.js","App3.js","App4.js","Letter.js","LifeCounter.js","ArrayOfMysteryWorld.js","App.js","index.js"],"names":["App5","useState","append","setAppend","formula","setFormula","operator","setOperator","choiceOperator","setChoiceOperator","decimal","setDecimal","answerFind","setAnswerFind","clear","appendNumber","e","value","target","textContent","trim","length","replace","operatorChoice","console","log","substr","positionEqual","indexOf","answer","lastElementInFormula","parseFloat","charAt","isNaN","regex1","subst1","formulaModify","result","Math","round","eval","toString","decimalButton","className","id","onClick","App1","word","setWord","colorBackgroundNo","backgroundColor","colorBackgroundYes","str","arrayTestWord","newWord","test","i","toLowerCase","push","j","palindrome","placeholder","onChange","event","style","translateOneLetter","cesarArray","index","App2","toUpperCase","rot13","translateNumToString","num","letter","App3","NUMBERLETTERTOWIN","number","setNumber","textError","arrayNumber","arrayLetter","floor","convertToRoman","type","ALPHABET1","split","ALPHABET2","CHOICELETTER","letters","disabled","map","includes","LIFECOUNTER","lettersMiss","ARRAY_OF_MYSTERY_WORLD","content","lettersFind","ANIMAL","MYSTERYWORD","random","numberGoodLetter","newWordToWin","App4","setLetters","setLettersMiss","setLettersFind","colorBackgroundWin","colorBackgroundLose","commun","document","getElementById","hidden","ReactDOM","render","endOfTheGame","Letter","Example1","href","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","Component"],"mappings":"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","file":"static/js/main.cefad5a7.chunk.js","sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\nimport React, { useState } from 'react';\r\nimport './css/app_style.min.css'\r\n\r\n\r\nfunction App5() {\r\n  const [append, setAppend] = useState('0');\r\n  const [formula, setFormula] = useState('');\r\n  const [operator, setOperator] = useState(false);\r\n  const [choiceOperator, setChoiceOperator] = useState('') \r\n  const [decimal, setDecimal]=useState(false)\r\n  const [answerFind, setAnswerFind] = useState(false) \r\n\r\n  function clear(){\r\n    setAppend('0')\r\n    setFormula('')\r\n    setOperator(false)\r\n    setChoiceOperator('')\r\n    setDecimal(false)\r\n    setAnswerFind(false)\r\n  }\r\n\r\n  function appendNumber(e){    \r\n    const value=e.target.textContent.trim();\r\n    setOperator(false)\r\n    setChoiceOperator('')    \r\n    if(append==='0'){\r\n      setAppend(`${value}`)      \r\n      setFormula(`${formula+value}`)\r\n      setAnswerFind(false)\r\n    }else if (append==='0.'){\r\n      setAppend(`${(append+value)}`)\r\n      setFormula(`${(formula+value)}`)\r\n    }else if (answerFind){\r\n      setAppend(`${value}`)      \r\n      setFormula(`${value}`)\r\n      setAnswerFind(false)\r\n    }else if (operator){\r\n      if(choiceOperator.length===2){\r\n        setAppend(`${append+value}`)  \r\n      }else{\r\n        setAppend(`${value}`)        \r\n      }     \r\n      setFormula(`${(formula+value)}`) \r\n    }\r\n    else{   \r\n    setAppend(`${(append+value).replace(/^0+/,'')}`)\r\n    setFormula(`${(formula+value).replace(/^0+/,'')}`)\r\n    }      \r\n  }\r\n\r\n    function operatorChoice(e){           \r\n      const value=e.target.textContent.trim();\r\n      setChoiceOperator(`${value}`)  \r\n      setAppend(`${value}`)\r\n      if(!operator){ \r\n        if(choiceOperator!==`${value}`){        \r\n          if (answerFind){          \r\n            const positionEqual=formula.indexOf('=') \r\n            setFormula(`${formula.substr(positionEqual+1,formula.length)+value}`)\r\n            setAnswerFind(false)\r\n          }else{\r\n           setFormula(`${(formula+value)}`)  \r\n          }  \r\n        }\r\n      }else{\r\n        if((value==='-')&(choiceOperator.length<2)){\r\n          console.log(\"Choice operator : \"+choiceOperator.length)\r\n\r\n          setAppend(value)\r\n          setChoiceOperator(`${choiceOperator+value}`)\r\n          setFormula(`${formula+value}`)\r\n        }\r\n        else{\r\n          console.log(\"else\")\r\n          setChoiceOperator(`${value}`)\r\n          setFormula(`${formula.substr(0,formula.length-choiceOperator.length)+value}`)\r\n        }\r\n      }\r\n      setOperator(true)\r\n      setDecimal(false)          \r\n    }\r\n\r\n    function answer(e){\r\n      const lastElementInFormula=parseFloat(formula.charAt(formula.length-1))    \r\n      const value=e.target.textContent.trim();\r\n       \r\n      if ((!answerFind) & (!(isNaN(lastElementInFormula)))){             \r\n        const regex1 = /x/gm\r\n        const subst1='*'   \r\n        let formulaModify=formula.replace(regex1,subst1)      //gestion du signe x\r\n        // eslint-disable-next-line no-eval\r\n        let result=(Math.round(100000000*eval(formulaModify))/100000000).toString()         \r\n        setAppend(result)\r\n        setFormula(`${(formula+value+result)}`)\r\n        setAnswerFind(true)\r\n        setDecimal(false)\r\n        setChoiceOperator('')\r\n      }      \r\n    }\r\n\r\n    function decimalButton(e){\r\n      const value=e.target.textContent.trim();      \r\n      if (!decimal){\r\n        setAppend(`${(append+value)}`)\r\n        if (append==='0'){                 \r\n          setFormula(`${('0'+value)}`)\r\n        }\r\n        else if (operator){         \r\n          setFormula(`${(formula+'0.')}`)\r\n          setAppend(`${'0.'}`)\r\n        }\r\n        else{\r\n          setFormula(`${(formula+value)}`)}        \r\n          setDecimal(true)\r\n      }     \r\n    }\r\n\r\n  return (   \r\n    <div className=\"App container\" id=\"calculatrice\">\r\n            \r\n        <div className=\"formulaScreen text-right\">\r\n              {formula}\r\n        </div>\r\n        <div className=\"outputScreen text-right\" id=\"display\">\r\n              {append}\r\n        </div>\r\n\r\n        <div className=\"buttonArray\">\r\n     \r\n          <div className=\"row\">\r\n            <div className=\"col-6 btn\" id=\"clear\" onClick={clear}>C</div>\r\n            <div className=\"col btn\" id=\"decimal\" onClick={decimalButton}>.</div>\r\n            <div className=\"col btn operator\" id=\"divide\" onClick={operatorChoice}>/</div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col btn\" id=\"seven\" onClick={appendNumber}>7</div>\r\n            <div className=\"col btn\" id=\"eight\" onClick={appendNumber}>8</div>\r\n            <div className=\"col btn\" id=\"nine\" onClick={appendNumber}>9 </div>\r\n            <div className=\"col btn operator\" id=\"multiply\" onClick={operatorChoice}>x</div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col btn\" id=\"four\" onClick={appendNumber}>4</div>\r\n            <div className=\"col btn\" id=\"five\" onClick={appendNumber}>5</div>\r\n            <div className=\"col btn\" id=\"six\" onClick={appendNumber}>6</div>\r\n            <div className=\"col btn operator\" id=\"subtract\" onClick={operatorChoice}>-</div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col btn\" id=\"one\" onClick={appendNumber}>1</div>\r\n            <div className=\"col btn\" id=\"two\" onClick={appendNumber}>2</div>\r\n            <div className=\"col btn\" id=\"three\" onClick={appendNumber}>3</div>\r\n            <div className=\"col btn operator\" id=\"add\" onClick={operatorChoice}>+</div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6 btn\" id=\"zero\" onClick={appendNumber}>0</div>\r\n            <div className=\"col-6 btn\" id=\"equals\" onClick={answer}>=</div>          \r\n          </div>\r\n          </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App5;","import React,{useState} from 'react';\n\nfunction palindrome(str) {\n\n    str=str.toLowerCase()\n    const regex=/[^a-z|^0-9]/gm\n    str=str.replace(regex,'');  \n    \n    let arrayTestWord=[]\n    let newWord=''\n    let test=false\n    \n    for (let i=str.length-1; i>=0;i--){\n      arrayTestWord.push(str.substr(i,1))\n    }\n    \n    for (let j=0; j<arrayTestWord.length;j++){\n      newWord=newWord+arrayTestWord[j]\n    }\n    \n    if(str===newWord){\n      test=true\n    }\n    \n    return test\n}\n\nfunction App1(){\n    const [word,setWord]=useState('') ;     \n    let colorBackgroundNo={backgroundColor:'red'}\n    let colorBackgroundYes={backgroundColor:''}  \n    \n    if (palindrome(word)===true && word.length>2){\n        colorBackgroundNo={backgroundColor:''}\n        colorBackgroundYes={backgroundColor:'green'}\n    }                    \n\n  return (\n    <div className=\"container-fluid border border-dark pb-1\">\n      <h1 className=\"text-center\">Palindrome</h1>\n      <div className=\"row justify-content-center\">\n          <div className=\"col text-center\">\n          <input placeholder=\"Taper votre mot ici \" onChange={event=>setWord(event.target.value)}></input>\n          </div>\n      </div>\n      \n      <div className=\"row justify-content-center m-1\">         \n          <div className=\"col-3 text-center border border-dark\" style={colorBackgroundYes}>\n              Oui\n          </div>\n          <div className=\"col-3 text-center border border-dark \" style={colorBackgroundNo}>\n              Non\n          </div>\n      </div>\n      \n    </div>\n  );  \n};\n\nexport default App1;","import React,{useState} from 'react';\n\nfunction translateOneLetter(str){\n    let cesarArray=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n    let index=cesarArray.indexOf(str)    \n    \n    if (index !==-1 & index<13){\n        str=cesarArray[index+13]\n    }else if (index>=13){\n        str=cesarArray[index-13]\n    }\n    \n   return(str)\n}\n\nfunction rot13(str) {\n    let newWord=''\n        \n    for (let i=0;i<str.length;i++){\n        newWord=newWord+translateOneLetter(str.substr(i,1).toUpperCase())          \n    }\n  \n    return newWord;\n  }\n\nfunction App2(){\n    const [word,setWord]=useState('') ;  \n    let newWord=rot13(word)\n\n  return (\n    <div className=\"container-fluid border border-dark pt-1 pb-1\">\n      <h1 className=\"text-center\">Message chiffré par décalage</h1>\n      <br/>\n      <div className=\"row justify-content-center\">          \n               <input placeholder=\"Taper votre message ici\" onChange={event=>setWord(event.target.value)}></input>\n      </div>\n      <div className=\"row justify-content-center\">  \n          <div className=\"col-4 border border-dark bg-white m-1\">\n          {newWord}\n          </div>          \n      </div>      \n    </div>\n  );  \n};\n\nexport default App2;","import React,{useState} from 'react';\n\nfunction translateNumToString(num){\n    let letter\n    switch(num){\n        case 1 :\n            letter=\"I\"\n            break\n        case 4 :\n            letter=\"IV\"\n            break\n        case 5 :\n            letter=\"V\"\n            break\n        case 9 :\n            letter=\"IX\"\n            break\n        case 10 :\n            letter=\"X\"\n            break\n        case 40 :\n            letter=\"XL\"\n            break\n        case 50 :\n            letter=\"L\"\n            break\n        case 90 :\n            letter=\"XC\"\n            break\n        case 100 :\n            letter=\"C\"\n            break\n        case 400 :\n            letter=\"CD\"\n            break\n        case 500:\n            letter=\"D\"\n            break\n        case 900 :\n            letter=\"CM\"\n            break\n        case 1000 :\n            letter=\"M\"\n            break  \n        default : \n            letter=''          \n    }\n    return letter\n}\n\nfunction convertToRoman(num) {\n    let arrayNumber=[]\n    let arrayLetter=[]\n    let word=''\n                 \n        while(num>=1000){\n                if ((Math.floor(num/1000))*1000===9000 || (Math.floor(num/1000))*1000===4000 || (Math.floor(num/1000))*1000===5000){\n                    arrayNumber.push((Math.floor(num/1000))*1000)\n                    num=num-(Math.floor(num/1000))*1000\n                }\n            else if(num<9000 & num>5000){\n                arrayNumber.push(5000)\n                num=num-5000\n            }else{\n                arrayNumber.push(1000)\n                num=num-1000\n            }\n        }\n       \n        while(num>=100){\n            if ((Math.floor(num/100))*100===900 || (Math.floor(num/100))*100===400 || (Math.floor(num/100))*100===500){\n                arrayNumber.push((Math.floor(num/100))*100)\n                num=num-(Math.floor(num/100))*100\n            }\n            else if(num<900 & num>500){\n                arrayNumber.push(500)\n                num=num-500\n            }else{\n                arrayNumber.push(100)\n                num=num-100\n            }\n        }    \n             \n        while(num>=10){\n            if ((Math.floor(num/10))*10===90 || (Math.floor(num/10))*10===40 || (Math.floor(num/10))*10===50){\n                arrayNumber.push((Math.floor(num/10))*10)\n                num=num-(Math.floor(num/10))*10\n            }else if(num<90 & num>50){\n                arrayNumber.push(50)\n                num=num-50\n            }else{\n                arrayNumber.push(10)\n                num=num-10\n            }\n        }     \n    \n        while(num >0){\n            if ((Math.floor(num/1))*1===9 || (Math.floor(num/1))*1===4 || (Math.floor(num/1))*1===5){\n                arrayNumber.push((Math.floor(num/1))*1)                             \n                num=num-(Math.floor(num/1))*1                        \n            }\n            else if(num<9 & num>5){\n                arrayNumber.push(5)\n                num=num-5                               \n            }else{\n                arrayNumber.push(1)\n                num=num-1                                  \n            }  \n\n    console.log(arrayNumber)\n        }\n    for (let i=0; i<arrayNumber.length;i++){\n        arrayLetter.push(translateNumToString(arrayNumber[i]))\n    }    \n    \n    for (let i=0;i<arrayLetter.length;i++){\n        word=word+arrayLetter[i]\n    }   \n    \n    return word\n} \n\nfunction App3(){\n    const [number,setNumber]=useState('') ;\n    var result\n    var textError='Votre nombre doit être en 1 et 3999'\n    if (number>=1 && number <4000){\n        result=convertToRoman(number)\n    }else if (number>3999){\n        result=textError\n    }\n    else if (number<0){\n        result=textError\n    }else{\n    result=\"\"\n    }       \n  \n  return (\n    <div className=\"container-fluid border border-dark pt-1 pb-1\">\n      <h1 className=\"text-center\">Convertisseur en nombre romain</h1>\n      <h5 className=\"text-center\">Entre 1 et 3999</h5>\n      \n      <div className=\"row justify-content-center\">\n          <div className=\"col-xs-2 m-1 \">\n               <input type=\"number\" placeholder=\"Taper votre nombre ici\" onChange={event=>setNumber(event.target.value)}></input>\n          </div>\n      </div>\n      \n      <div className=\"row justify-content-center\">\n          <div className=\"col-8 text-center bg-dark text-white m-1\">\n                {result}\n          </div>          \n      </div>\n      \n    </div>\n  );  \n};\n\nexport default App3;","import React,{useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport Letter from './Letter.js'\nimport LIFECOUNTER from './LifeCounter';\nimport ARRAY_OF_MYSTERY_WORLD from './ArrayOfMysteryWorld'\n\nconst ANIMAL =(['LION','RENARD','CHIEN','PUMA','LAMA','COCHON']);\nvar MYSTERYWORD=ANIMAL[Math.floor(Math.random()*6)]\nvar NUMBERLETTERTOWIN\n\n// on calcule le nombre de lettres à trouver et éviter les doublons dans le calcul pour gagner\nfunction numberGoodLetter(word){\n    let test=word\n    let newWordToWin=''\n      for (let i=0;i<word.length;i++){\n        if (test.includes(word[i])&& !newWordToWin.includes(word[i])){\n          newWordToWin=newWordToWin+word[i]\n        }\n      }    \n      return NUMBERLETTERTOWIN=newWordToWin.length\n}\n\nnumberGoodLetter(MYSTERYWORD)\n\nfunction App4(){ \n\n    const   [letters,setLetters]=useState([]) //stocke la lettre cliquée\n    const   [lettersMiss,setLettersMiss]=useState([]) //stocke les mauvais choix\n    const   [lettersFind,setLettersFind]=useState([]) // stocke les bonnes réponses      \n    let colorBackgroundWin={backgroundColor:''}\n    let colorBackgroundLose={backgroundColor:''}        \n\n   // ce qui se passe quand on appuie sur une lettre\n    function onClickLetter(e){\n        setLetters(e+letters)  // on grise et on bloque  la lettre\n        if (MYSTERYWORD.includes(e)){\n          setLettersFind(e+lettersFind)\n        }else{\n          setLettersMiss(e+lettersMiss)\n        }           \n    }\n     \n    //gère les cas de fin de partie\n    function endOfTheGame(){\n      \n      function commun(){\n        document.getElementById('zoneDesLettres').hidden=true //cache les lettres\n        document.getElementById('zonePourRejouer').hidden=false // affiche le bouton pour rejouer\n      }\n       //si gagné\n      if (lettersFind.length===NUMBERLETTERTOWIN){\n        colorBackgroundWin={backgroundColor:'green'} // fond vert dans la case gagnée\n        commun()\n        \n      }\n      \n      //si perdu\n      if (lettersMiss.length===7){      \n        colorBackgroundLose={backgroundColor:'red'} // fond rouge dans la case perdue\n        commun()\n        ReactDOM.render('La réponse était : '+MYSTERYWORD,document.getElementById('bonneRéponse'))  \n         \n      } \n  }  \n    function reInitialise(){\n      setLetters([]) //stocke la lettre cliquée\n      setLettersMiss([]) //stocke les mauvais choix\n      setLettersFind([])// stocke les bonnes réponses      \n      colorBackgroundWin={backgroundColor:''}\n      colorBackgroundLose={backgroundColor:''} \n      document.getElementById('zoneDesLettres').hidden=false  //cache les lettres \n      document.getElementById('zonePourRejouer').hidden=true // affiche le bouton pour rejouer \n      MYSTERYWORD=ANIMAL[Math.floor(Math.random()*6)]\n      numberGoodLetter(MYSTERYWORD)\n      ReactDOM.render('',document.getElementById('bonneRéponse'))\n    }\n  \n    endOfTheGame() //vérifie si la partie est finie\n\n    return(\n\n        <div className=\"container-fluid border border-dark pt-1 pb-1\">\n          <div className=\"container-fluid\" id=\"title\">\n            <h2 className=\"row justify-content-center text-center\">Pendu simplifié des animaux</h2>\n          </div>\n          <br />\n\n          <div className=\"row justify-content-center m-1\">         \n          <div className=\"col-5 text-center border border-dark\" style={colorBackgroundWin}>\n              Gagné\n          </div>\n          <div className=\"col-5 text-center border border-dark \" style={colorBackgroundLose}>\n              Perdu\n          </div>\n      </div>\n\n          <div className=\"container-fluid col-8\">\n\n            <div id=\"masque\">\n                <LIFECOUNTER lettersMiss={lettersMiss}/>\n                <ARRAY_OF_MYSTERY_WORLD\n                content={MYSTERYWORD}\n                lettersFind={lettersFind}                 \n                />                      \n            </div>\n            \n          <br />\n            <div id=\"zoneDesLettres\">\n            <Letter\n                onClick={onClickLetter}\n                letters={letters}                           \n                /> \n            </div>\n            <div className=\"text-center\" id=\"zonePourRejouer\" hidden={true}>\n              <p><span id='bonneRéponse'></span></p>\n              <button onClick={reInitialise}>Voulez-vous rejouer ?</button>\n            </div>\n          </div>  \n                \n        </div>\n\n    )\n}\n\nexport default App4","import React from 'react'\r\n\r\nconst ALPHABET1=\"ABCDEFGHIJKLM\".split(\"\")\r\nconst ALPHABET2=\"NOPQRSTUVWXYZ\".split(\"\")\r\n\r\n// Crée les boutons des lettres et renvoie la lettre cliquée\r\nconst CHOICELETTER =({onClick, letters,disabled=false})=>(\r\n        <div>\r\n            <div className=\"letters-buttons row justify-content-center\">\r\n                {ALPHABET1.map((letter,index)=>(\r\n                    <button\r\n                        key={index}\r\n                        disabled={letters.includes(letter)\r\n                        ? true\r\n                        :false}\r\n                        onClick={() => onClick(letter)}\r\n                        className={letters.includes(letter)\r\n                            ?\"btn-secondary m-1\"\r\n                            :\"m-1\" }\r\n                    >\r\n                        <span>{letter}</span>\r\n                    </button>\r\n                ))}\r\n            </div> \r\n            <div className=\"letters-buttons row justify-content-center\">\r\n                {ALPHABET2.map((letter,index)=>(\r\n                    <button\r\n                        disabled={letters.includes(letter)\r\n                        ? true\r\n                        :false}\r\n                        key={index}\r\n                        onClick={() => onClick(letter)}\r\n                        className={letters.includes(letter)\r\n                            ?\"btn-secondary m-1 disabled:{true}\"\r\n                            :\"m-1\" }\r\n                    >\r\n                        <span >{letter}</span>\r\n                    </button> \r\n                    ))}\r\n            </div>  \r\n    </div>  \r\n)        \r\n\r\nexport default CHOICELETTER","import React from 'react'\r\n\r\n// Vérifie s'il reste des essais\r\nconst LIFECOUNTER=({lettersMiss})=> {\r\n    return(\r\n        <div className=\"row justify-content-center\">\r\n            Essais restants : {7-lettersMiss.length}\r\n        </div>\r\n    )\r\n}\r\nexport default LIFECOUNTER","import React from \"react\";\r\nimport './ArrayOfMysteryWorld.css'\r\n\r\n// définit la zone du mot mystère\r\nconst ARRAY_OF_MYSTERY_WORLD = ({ content, lettersFind}) => {\r\n  const MYSTERYWORD = content.split(/[ ,]+/);\r\n  const words = MYSTERYWORD.map(word => word.split(\"\"));\r\n  const letters = words.map((word, index) => (\r\n    <div className={`word`} key={index}>\r\n      {word.map((letter, index) => (\r\n        <div   \r\n          key={index}\r\n          className={lettersFind.includes(letter) ? \"finded\" : \"\"}\r\n        >\r\n          <div id =\"afficheLettre\" className=\"m-1\">{letter}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  ));\r\n  return <section className=\"mysteryword\">{letters}</section>;\r\n};\r\n\r\nexport default ARRAY_OF_MYSTERY_WORLD;","import React, { Component } from \"react\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App1 from './App1';\nimport App2 from './App2';\nimport App3 from './App3';\nimport App4 from './App4';\nimport App5 from './App5';\n\n\nexport class Example1 extends Component {\n    render() {\n        return (            \n            <>\n                <h5 className=\"container-fluid text-center text-primary\">                    \n                    Voici un accordéon de TP réalisés avec React et proposés par &nbsp;\n                    <a href=\"https://openclassrooms.com/fr\">OpenClassrooms</a>\n                    &nbsp; ou  &nbsp;\n                    <a href=\"https://www.freecodecamp.org/\">freecodecamp</a>                    \n                </h5>\n\n                <div>\n                    <Accordion>\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                Palindrome\n                            </Accordion.Toggle>\n\n                            <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body>\n                                  <div id=\"root1\">\n                                    <App1/>\n                                  </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                                Message chiffré par décalage\n                            </Accordion.Toggle>\n\n                            <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body>\n                                  <div id=\"root2\">\n                                    <App2/>\n                                  </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                                Convertisseur en nombre romain\n                            </Accordion.Toggle>\n\n                            <Accordion.Collapse eventKey=\"2\">\n                                <Card.Body>\n                                  <div id=\"root3\">\n                                    <App3/>\n                                  </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                                Pendu simplifié sur les animaux\n                            </Accordion.Toggle>\n\n                            <Accordion.Collapse eventKey=\"3\">\n                                <Card.Body>\n                                  <div id=\"root4\">\n                                    <App4/>\n                                  </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"4\">\n                                Calculatrice\n                            </Accordion.Toggle>\n\n                            <Accordion.Collapse eventKey=\"4\">\n                                <Card.Body>\n                                  <div id=\"root5\">\n                                    <App5/>\n                                  </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n\n\n                    </Accordion>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Example1;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Example1 from './App';\n\nReactDOM.render(<Example1/>,document.getElementById('root'));"],"sourceRoot":""}