{"version":3,"sources":["App1.js","App2.js","App3.js","reportWebVitals.js","index.js"],"names":["App1","useState","word","setWord","colorBackgroundNo","backgroundColor","colorBackgroundYes","str","arrayTestWord","newWord","test","i","toLowerCase","replace","length","push","substr","j","palindrome","className","placeholder","onChange","event","target","value","style","translateOneLetter","cesarArray","index","indexOf","App2","toUpperCase","rot13","translateNumToString","num","letter","App3","result","number","setNumber","textError","arrayNumber","arrayLetter","Math","floor","console","log","convertToRoman","type","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ebdb15f9.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nfunction palindrome(str) {\n\n    str=str.toLowerCase()\n    const regex=/[^a-z|^0-9]/gm\n    str=str.replace(regex,'');  \n    \n    let arrayTestWord=[]\n    let newWord=''\n    let test=false\n    \n    for (let i=str.length-1; i>=0;i--){\n      arrayTestWord.push(str.substr(i,1))\n    }\n    \n    for (let j=0; j<arrayTestWord.length;j++){\n      newWord=newWord+arrayTestWord[j]\n    }\n    \n    if(str===newWord){\n      test=true\n    }\n    \n    return test\n}\n\nfunction App1(){\n    const [word,setWord]=useState('') ;     \n    let colorBackgroundNo={backgroundColor:'red'}\n    let colorBackgroundYes={backgroundColor:''}  \n    \n    if (palindrome(word)===true && word.length>2){\n        colorBackgroundNo={backgroundColor:''}\n        colorBackgroundYes={backgroundColor:'green'}\n    }                    \n\n  return (\n    <div className=\"container-fluid border border-dark pb-1\">\n      <h1 className=\"text-center\">Palindrome</h1>\n      <div className=\"row justify-content-center\">\n          <div className=\"col text-center\">\n          <input placeholder=\"Taper votre mot ici \" onChange={event=>setWord(event.target.value)}></input>\n          </div>\n          <div className=\"col-2 text-center border border-dark\" style={colorBackgroundYes}>\n              Oui\n          </div>\n          <div className=\"col-2 text-center border border-dark \" style={colorBackgroundNo}>\n              Non\n          </div>\n      </div>\n      \n    </div>\n  );  \n};\n\nexport default App1;","import React,{useState} from 'react';\n\nfunction translateOneLetter(str){\n    let cesarArray=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n    let index=cesarArray.indexOf(str)    \n    \n    if (index !==-1 & index<13){\n        str=cesarArray[index+13]\n    }else if (index>=13){\n        str=cesarArray[index-13]\n    }\n    \n   return(str)\n}\n\nfunction rot13(str) {\n    let newWord=''\n        \n    for (let i=0;i<str.length;i++){\n        newWord=newWord+translateOneLetter(str.substr(i,1).toUpperCase())          \n    }\n  \n    return newWord;\n  }\n\nfunction App2(){\n    const [word,setWord]=useState('') ;  \n    let newWord=rot13(word)\n\n  return (\n    <div className=\"container-fluid bg-secondary border border-dark pt-1 pb-1\">\n      <h1 className=\"text-center\">Chiffrement par d√©calage</h1>\n      <br/>\n      <div className=\"row justify-content-center\">\n          <div className=\"col text-center\">\n               <input placeholder=\"Taper votre message ici\" onChange={event=>setWord(event.target.value)}></input>\n          </div>\n          <div className=\"col border border-dark bg-white pl-1\">\n          {newWord}\n          </div>          \n      </div>\n      \n    </div>\n  );  \n};\n\nexport default App2;","import React,{useState} from 'react';\n\nfunction translateNumToString(num){\n    let letter\n    switch(num){\n        case 1 :\n            letter=\"I\"\n            break\n        case 4 :\n            letter=\"IV\"\n            break\n        case 5 :\n            letter=\"V\"\n            break\n        case 9 :\n            letter=\"IX\"\n            break\n        case 10 :\n            letter=\"X\"\n            break\n        case 40 :\n            letter=\"XL\"\n            break\n        case 50 :\n            letter=\"L\"\n            break\n        case 90 :\n            letter=\"XC\"\n            break\n        case 100 :\n            letter=\"C\"\n            break\n        case 400 :\n            letter=\"CD\"\n            break\n        case 500:\n            letter=\"D\"\n            break\n        case 900 :\n            letter=\"CM\"\n            break\n        case 1000 :\n            letter=\"M\"\n            break  \n        default : \n            letter=''          \n    }\n    return letter\n}\n\nfunction convertToRoman(num) {\n    let arrayNumber=[]\n    let arrayLetter=[]\n    let word=''\n                 \n        while(num>=1000){\n                if ((Math.floor(num/1000))*1000===9000 || (Math.floor(num/1000))*1000===4000 || (Math.floor(num/1000))*1000===5000){\n                    arrayNumber.push((Math.floor(num/1000))*1000)\n                    num=num-(Math.floor(num/1000))*1000\n                }\n            else if(num<9000 & num>5000){\n                arrayNumber.push(5000)\n                num=num-5000\n            }else{\n                arrayNumber.push(1000)\n                num=num-1000\n            }\n        }\n       \n        while(num>=100){\n            if ((Math.floor(num/100))*100===900 || (Math.floor(num/100))*100===400 || (Math.floor(num/100))*100===500){\n                arrayNumber.push((Math.floor(num/100))*100)\n                num=num-(Math.floor(num/100))*100\n            }\n            else if(num<900 & num>500){\n                arrayNumber.push(500)\n                num=num-500\n            }else{\n                arrayNumber.push(100)\n                num=num-100\n            }\n        }    \n             \n        while(num>=10){\n            if ((Math.floor(num/10))*10===90 || (Math.floor(num/10))*10===40 || (Math.floor(num/10))*10===50){\n                arrayNumber.push((Math.floor(num/10))*10)\n                num=num-(Math.floor(num/10))*10\n            }else if(num<90 & num>50){\n                arrayNumber.push(50)\n                num=num-50\n            }else{\n                arrayNumber.push(10)\n                num=num-10\n            }\n        }     \n    \n        while(num >0){\n            if ((Math.floor(num/1))*1===9 || (Math.floor(num/1))*1===4 || (Math.floor(num/1))*1===5){\n                arrayNumber.push((Math.floor(num/1))*1)                             \n                num=num-(Math.floor(num/1))*1                        \n            }\n            else if(num<9 & num>5){\n                arrayNumber.push(5)\n                num=num-5                               \n            }else{\n                arrayNumber.push(1)\n                num=num-1                                  \n            }  \n\n    console.log(arrayNumber)\n        }\n    for (let i=0; i<arrayNumber.length;i++){\n        arrayLetter.push(translateNumToString(arrayNumber[i]))\n    }    \n    \n    for (let i=0;i<arrayLetter.length;i++){\n        word=word+arrayLetter[i]\n    }   \n    \n    return word\n} \n\nfunction App3(){\n    const [number,setNumber]=useState('') ;\n    var result\n    var textError='Votre nombre doit √™tre en 1 et 3999'\n    if (number>=1 && number <4000){\n        result=convertToRoman(number)\n    }else if (number>3999){\n        result=textError\n    }\n    else if (number<0){\n        result=textError\n    }else{\n    result=\"\"\n    }       \n  \n  return (\n    <div className=\"container-fluid border border-dark pt-1 pb-1\">\n      <h1 className=\"text-center\">Convertisseur en nombre romain</h1>\n      <h5 className=\"text-center\">Entre 1 et 3999</h5>\n      \n      <div className=\"row justify-content-center\">\n          <div className=\"col-2\">\n               <input type=\"number\" placeholder=\"Taper votre nombre ici\" onChange={event=>setNumber(event.target.value)}></input>\n          </div>\n\n          <div className=\"col-2 text-center border border-dark bg-white\">\n                {result}\n          </div>          \n      </div>\n      \n    </div>\n  );  \n};\n\nexport default App3;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App1 from './App1';\nimport App2 from './App2';\nimport App3 from './App3';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App1/>,document.getElementById('root1'));\nReactDOM.render(<App2/>,document.getElementById('root2'));\nReactDOM.render(<App3/>,document.getElementById('root3'));\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}