{"version":3,"sources":["App1.js","App2.js","App3.js","App4.js","Letter.js","LifeCounter.js","ArrayOfMysteryWorld.js","App.js","index.js"],"names":["App1","useState","word","setWord","colorBackgroundNo","backgroundColor","colorBackgroundYes","str","arrayTestWord","newWord","test","i","toLowerCase","replace","length","push","substr","j","palindrome","className","placeholder","onChange","event","target","value","style","translateOneLetter","cesarArray","index","indexOf","App2","toUpperCase","rot13","translateNumToString","num","letter","App3","NUMBERLETTERTOWIN","result","number","setNumber","textError","arrayNumber","arrayLetter","Math","floor","console","log","convertToRoman","type","ALPHABET1","split","ALPHABET2","CHOICELETTER","onClick","letters","disabled","map","includes","LIFECOUNTER","lettersMiss","ARRAY_OF_MYSTERY_WORLD","content","lettersFind","id","ANIMAL","MYSTERYWORD","random","numberGoodLetter","newWordToWin","App4","setLetters","setLettersMiss","setLettersFind","colorBackgroundWin","colorBackgroundLose","document","getElementById","hidden","Letter","e","Example1","href","Accordion","Card","Toggle","as","Header","eventKey","Collapse","Body","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.48ee7327.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nfunction palindrome(str) {\n\n    str=str.toLowerCase()\n    const regex=/[^a-z|^0-9]/gm\n    str=str.replace(regex,'');  \n    \n    let arrayTestWord=[]\n    let newWord=''\n    let test=false\n    \n    for (let i=str.length-1; i>=0;i--){\n      arrayTestWord.push(str.substr(i,1))\n    }\n    \n    for (let j=0; j<arrayTestWord.length;j++){\n      newWord=newWord+arrayTestWord[j]\n    }\n    \n    if(str===newWord){\n      test=true\n    }\n    \n    return test\n}\n\nfunction App1(){\n    const [word,setWord]=useState('') ;     \n    let colorBackgroundNo={backgroundColor:'red'}\n    let colorBackgroundYes={backgroundColor:''}  \n    \n    if (palindrome(word)===true && word.length>2){\n        colorBackgroundNo={backgroundColor:''}\n        colorBackgroundYes={backgroundColor:'green'}\n    }                    \n\n  return (\n    <div className=\"container-fluid border border-dark pb-1\">\n      <h1 className=\"text-center\">Palindrome</h1>\n      <div className=\"row justify-content-center\">\n          <div className=\"col text-center\">\n          <input placeholder=\"Taper votre mot ici \" onChange={event=>setWord(event.target.value)}></input>\n          </div>\n      </div>\n      \n      <div className=\"row justify-content-center m-1\">         \n          <div className=\"col-3 text-center border border-dark\" style={colorBackgroundYes}>\n              Oui\n          </div>\n          <div className=\"col-3 text-center border border-dark \" style={colorBackgroundNo}>\n              Non\n          </div>\n      </div>\n      \n    </div>\n  );  \n};\n\nexport default App1;","import React,{useState} from 'react';\n\nfunction translateOneLetter(str){\n    let cesarArray=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n    let index=cesarArray.indexOf(str)    \n    \n    if (index !==-1 & index<13){\n        str=cesarArray[index+13]\n    }else if (index>=13){\n        str=cesarArray[index-13]\n    }\n    \n   return(str)\n}\n\nfunction rot13(str) {\n    let newWord=''\n        \n    for (let i=0;i<str.length;i++){\n        newWord=newWord+translateOneLetter(str.substr(i,1).toUpperCase())          \n    }\n  \n    return newWord;\n  }\n\nfunction App2(){\n    const [word,setWord]=useState('') ;  \n    let newWord=rot13(word)\n\n  return (\n    <div className=\"container-fluid border border-dark pt-1 pb-1\">\n      <h1 className=\"text-center\">Message chiffré par décalage</h1>\n      <br/>\n      <div className=\"row justify-content-center\">          \n               <input placeholder=\"Taper votre message ici\" onChange={event=>setWord(event.target.value)}></input>\n      </div>\n      <div className=\"row justify-content-center\">  \n          <div className=\"col-4 border border-dark bg-white m-1\">\n          {newWord}\n          </div>          \n      </div>      \n    </div>\n  );  \n};\n\nexport default App2;","import React,{useState} from 'react';\n\nfunction translateNumToString(num){\n    let letter\n    switch(num){\n        case 1 :\n            letter=\"I\"\n            break\n        case 4 :\n            letter=\"IV\"\n            break\n        case 5 :\n            letter=\"V\"\n            break\n        case 9 :\n            letter=\"IX\"\n            break\n        case 10 :\n            letter=\"X\"\n            break\n        case 40 :\n            letter=\"XL\"\n            break\n        case 50 :\n            letter=\"L\"\n            break\n        case 90 :\n            letter=\"XC\"\n            break\n        case 100 :\n            letter=\"C\"\n            break\n        case 400 :\n            letter=\"CD\"\n            break\n        case 500:\n            letter=\"D\"\n            break\n        case 900 :\n            letter=\"CM\"\n            break\n        case 1000 :\n            letter=\"M\"\n            break  \n        default : \n            letter=''          \n    }\n    return letter\n}\n\nfunction convertToRoman(num) {\n    let arrayNumber=[]\n    let arrayLetter=[]\n    let word=''\n                 \n        while(num>=1000){\n                if ((Math.floor(num/1000))*1000===9000 || (Math.floor(num/1000))*1000===4000 || (Math.floor(num/1000))*1000===5000){\n                    arrayNumber.push((Math.floor(num/1000))*1000)\n                    num=num-(Math.floor(num/1000))*1000\n                }\n            else if(num<9000 & num>5000){\n                arrayNumber.push(5000)\n                num=num-5000\n            }else{\n                arrayNumber.push(1000)\n                num=num-1000\n            }\n        }\n       \n        while(num>=100){\n            if ((Math.floor(num/100))*100===900 || (Math.floor(num/100))*100===400 || (Math.floor(num/100))*100===500){\n                arrayNumber.push((Math.floor(num/100))*100)\n                num=num-(Math.floor(num/100))*100\n            }\n            else if(num<900 & num>500){\n                arrayNumber.push(500)\n                num=num-500\n            }else{\n                arrayNumber.push(100)\n                num=num-100\n            }\n        }    \n             \n        while(num>=10){\n            if ((Math.floor(num/10))*10===90 || (Math.floor(num/10))*10===40 || (Math.floor(num/10))*10===50){\n                arrayNumber.push((Math.floor(num/10))*10)\n                num=num-(Math.floor(num/10))*10\n            }else if(num<90 & num>50){\n                arrayNumber.push(50)\n                num=num-50\n            }else{\n                arrayNumber.push(10)\n                num=num-10\n            }\n        }     \n    \n        while(num >0){\n            if ((Math.floor(num/1))*1===9 || (Math.floor(num/1))*1===4 || (Math.floor(num/1))*1===5){\n                arrayNumber.push((Math.floor(num/1))*1)                             \n                num=num-(Math.floor(num/1))*1                        \n            }\n            else if(num<9 & num>5){\n                arrayNumber.push(5)\n                num=num-5                               \n            }else{\n                arrayNumber.push(1)\n                num=num-1                                  \n            }  \n\n    console.log(arrayNumber)\n        }\n    for (let i=0; i<arrayNumber.length;i++){\n        arrayLetter.push(translateNumToString(arrayNumber[i]))\n    }    \n    \n    for (let i=0;i<arrayLetter.length;i++){\n        word=word+arrayLetter[i]\n    }   \n    \n    return word\n} \n\nfunction App3(){\n    const [number,setNumber]=useState('') ;\n    var result\n    var textError='Votre nombre doit être en 1 et 3999'\n    if (number>=1 && number <4000){\n        result=convertToRoman(number)\n    }else if (number>3999){\n        result=textError\n    }\n    else if (number<0){\n        result=textError\n    }else{\n    result=\"\"\n    }       \n  \n  return (\n    <div className=\"container-fluid border border-dark pt-1 pb-1\">\n      <h1 className=\"text-center\">Convertisseur en nombre romain</h1>\n      <h5 className=\"text-center\">Entre 1 et 3999</h5>\n      \n      <div className=\"row justify-content-center\">\n          <div className=\"col-xs-2 m-1 \">\n               <input type=\"number\" placeholder=\"Taper votre nombre ici\" onChange={event=>setNumber(event.target.value)}></input>\n          </div>\n      </div>\n      \n      <div className=\"row justify-content-center\">\n          <div className=\"col-8 text-center bg-dark text-white m-1\">\n                {result}\n          </div>          \n      </div>\n      \n    </div>\n  );  \n};\n\nexport default App3;","import React,{useState} from 'react';\nimport Letter from './Letter.js'\nimport LIFECOUNTER from './LifeCounter';\nimport ARRAY_OF_MYSTERY_WORLD from './ArrayOfMysteryWorld'\n\nconst ANIMAL =(['LION','RENARD','CHIEN','PUMA','LAMA','COCHON']);\nvar MYSTERYWORD=ANIMAL[Math.floor(Math.random()*6)]\nvar NUMBERLETTERTOWIN\n\n// on calcule le nombre de lettres à trouver et éviter les doublons dans le calcul pour gagner\nfunction numberGoodLetter(word){\n    let test=word\n    let newWordToWin=''\n      for (let i=0;i<word.length;i++){\n        if (test.includes(word[i])&& !newWordToWin.includes(word[i])){\n          newWordToWin=newWordToWin+word[i]\n        }\n      }    \n      return NUMBERLETTERTOWIN=newWordToWin.length\n}\n\nnumberGoodLetter(MYSTERYWORD)\n\nfunction App4(){ \n\n    const   [letters,setLetters]=useState([]) //stocke la lettre cliquée\n    const   [lettersMiss,setLettersMiss]=useState([]) //stocke les mauvais choix\n    const   [lettersFind,setLettersFind]=useState([]) // stocke les bonnes réponses      \n    let colorBackgroundWin={backgroundColor:''}\n    let colorBackgroundLose={backgroundColor:''}        \n\n   // ce qui se passe quand on appuie sur une lettre\n    function onClickLetter(e){\n        setLetters(e+letters)  // on grise et on bloque  la lettre\n        if (MYSTERYWORD.includes(e)){\n          setLettersFind(e+lettersFind)\n        }else{\n          setLettersMiss(e+lettersMiss)\n        }           \n    }\n     \n    //gère les cas de fin de partie\n    function endOfTheGame(){\n      \n      // fond vert dans la case gagnée\n      if (lettersFind.length===NUMBERLETTERTOWIN){\n        colorBackgroundWin={backgroundColor:'green'} \n        document.getElementById('zoneDesLettres').hidden=true //cache les lettres\n        document.getElementById('zonePourRejouer').hidden=false // affiche le bouton pour rejouer\n      }\n      // fond rouge dans la case perdue\n      if (lettersMiss.length===7){      \n        colorBackgroundLose={backgroundColor:'red'} \n        document.getElementById('zoneDesLettres').hidden=true  //cache les lettres \n        document.getElementById('zonePourRejouer').hidden=false // affiche le bouton pour rejouer     \n      } \n  }  \n    function reInitialise(){\n      setLetters([]) //stocke la lettre cliquée\n      setLettersMiss([]) //stocke les mauvais choix\n      setLettersFind([])// stocke les bonnes réponses      \n      colorBackgroundWin={backgroundColor:''}\n      colorBackgroundLose={backgroundColor:''} \n      document.getElementById('zoneDesLettres').hidden=false  //cache les lettres \n      document.getElementById('zonePourRejouer').hidden=true // affiche le bouton pour rejouer \n      MYSTERYWORD=ANIMAL[Math.floor(Math.random()*6)]\n      numberGoodLetter(MYSTERYWORD)\n    }\n  \n    endOfTheGame() //vérifie si la partie est finie\n\n    return(\n\n        <div className=\"container-fluid border border-dark pt-1 pb-1\">\n          <div className=\"container-fluid\" id=\"title\">\n            <h2 className=\"row justify-content-center text-center\">Pendu simplifié des animaux</h2>\n          </div>\n          <br />\n\n          <div className=\"row justify-content-center m-1\">         \n          <div className=\"col-5 text-center border border-dark\" style={colorBackgroundWin}>\n              Gagné\n          </div>\n          <div className=\"col-5 text-center border border-dark \" style={colorBackgroundLose}>\n              Perdu\n          </div>\n      </div>\n\n          <div className=\"container-fluid col-8\">\n\n            <div id=\"masque\">\n                <LIFECOUNTER lettersMiss={lettersMiss}/>\n                <ARRAY_OF_MYSTERY_WORLD\n                content={MYSTERYWORD}\n                lettersFind={lettersFind}                 \n                />                      \n            </div>\n            \n          <br />\n            <div id=\"zoneDesLettres\">\n            <Letter\n                onClick={onClickLetter}\n                letters={letters}                           \n                /> \n            </div>\n            <div className=\"text-center\" id=\"zonePourRejouer\" hidden={true}>\n              <button onClick={reInitialise}>Voulez-vous rejouer ?</button>\n            </div>\n          </div>  \n                \n        </div>\n\n    )\n}\n\nexport default App4","import React from 'react'\r\n\r\nconst ALPHABET1=\"ABCDEFGHIJKLM\".split(\"\")\r\nconst ALPHABET2=\"NOPQRSTUVWXYZ\".split(\"\")\r\n\r\n// Crée les boutons des lettres et renvoie la lettre cliquée\r\nconst CHOICELETTER =({onClick, letters,disabled=false})=>(\r\n        <div>\r\n            <div className=\"letters-buttons row justify-content-center\">\r\n                {ALPHABET1.map((letter,index)=>(\r\n                    <button\r\n                        key={index}\r\n                        disabled={letters.includes(letter)\r\n                        ? true\r\n                        :false}\r\n                        onClick={() => onClick(letter)}\r\n                        className={letters.includes(letter)\r\n                            ?\"btn-secondary m-1\"\r\n                            :\"m-1\" }\r\n                    >\r\n                        <span>{letter}</span>\r\n                    </button>\r\n                ))}\r\n            </div> \r\n            <div className=\"letters-buttons row justify-content-center\">\r\n                {ALPHABET2.map((letter,index)=>(\r\n                    <button\r\n                        disabled={letters.includes(letter)\r\n                        ? true\r\n                        :false}\r\n                        key={index}\r\n                        onClick={() => onClick(letter)}\r\n                        className={letters.includes(letter)\r\n                            ?\"btn-secondary m-1 disabled:{true}\"\r\n                            :\"m-1\" }\r\n                    >\r\n                        <span >{letter}</span>\r\n                    </button> \r\n                    ))}\r\n            </div>  \r\n    </div>  \r\n)        \r\n\r\nexport default CHOICELETTER","import React from 'react'\r\n\r\n// Vérifie s'il reste des essais\r\nconst LIFECOUNTER=({lettersMiss})=> {\r\n    return(\r\n        <div className=\"row justify-content-center\">\r\n            Essais restants : {7-lettersMiss.length}\r\n        </div>\r\n    )\r\n}\r\nexport default LIFECOUNTER","import React from \"react\";\r\nimport './ArrayOfMysteryWorld.css'\r\n\r\n// définit la zone du mot mystère\r\nconst ARRAY_OF_MYSTERY_WORLD = ({ content, lettersFind}) => {\r\n  const MYSTERYWORD = content.split(/[ ,]+/);\r\n  const words = MYSTERYWORD.map(word => word.split(\"\"));\r\n  const letters = words.map((word, index) => (\r\n    <div className={`word`} key={index}>\r\n      {word.map((letter, index) => (\r\n        <div   \r\n          key={index}\r\n          className={lettersFind.includes(letter) ? \"finded\" : \"\"}\r\n        >\r\n          <div id =\"afficheLettre\" className=\"m-1\">{letter}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  ));\r\n  return <section className=\"mysteryword\">{letters}</section>;\r\n};\r\n\r\nexport default ARRAY_OF_MYSTERY_WORLD;","import React, { Component } from \"react\";\nimport { Accordion, Card } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App1 from './App1';\nimport App2 from './App2';\nimport App3 from './App3';\nimport App4 from './App4';\n\nexport class Example1 extends Component {\n    render() {\n        return (            \n            <>\n                <h5 className=\"row justify-content-center col-8 text-center text-primary\">                    \n                    Voici un accordéon de TP proposés par &nbsp;\n                    <a href=\"https://openclassrooms.com/fr\">OpenClassrooms</a>\n                    &nbsp; et  &nbsp;\n                    <a href=\"https://www.freecodecamp.org/\">freecodecamp</a>\n                    &nbsp; réalisés avec React\n                </h5>\n\n                <div>\n                    <Accordion>\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n                                Palindrome\n                            </Accordion.Toggle>\n\n                            <Accordion.Collapse eventKey=\"0\">\n                                <Card.Body>\n                                  <div id=\"root1\">\n                                    <App1/>\n                                  </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\n                                Message chiffré par décalage\n                            </Accordion.Toggle>\n\n                            <Accordion.Collapse eventKey=\"1\">\n                                <Card.Body>\n                                  <div id=\"root2\">\n                                    <App2/>\n                                  </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\n                                Convertisseur en nombre romain\n                            </Accordion.Toggle>\n\n                            <Accordion.Collapse eventKey=\"2\">\n                                <Card.Body>\n                                  <div id=\"root3\">\n                                    <App3/>\n                                  </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n                        <Card>\n                            <Accordion.Toggle as={Card.Header} eventKey=\"3\">\n                                Pendu simplifié sur les animaux\n                            </Accordion.Toggle>\n\n                            <Accordion.Collapse eventKey=\"3\">\n                                <Card.Body>\n                                  <div id=\"root4\">\n                                    <App4/>\n                                  </div>\n                                </Card.Body>\n                            </Accordion.Collapse>\n                        </Card>\n\n\n\n                    </Accordion>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Example1;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Example1 from './App';\n\nReactDOM.render(<Example1/>,document.getElementById('root'));"],"sourceRoot":""}